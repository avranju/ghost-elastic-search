//
// Dropdown menus
// --------------------------------------------------


// Dropdown arrow/caret
.caret {
    display: inline-block;
    width: 0;
    height: 0;
    margin-left: 2px;
    vertical-align: middle;
    border-top:   4px solid;
    border-right: 4px solid transparent;
    border-left:  4px solid transparent;
}

// The dropdown wrapper (div)
.dropdown {
    position: relative;
}

// Prevent the focus on the dropdown toggle when closing dropdowns
.dropdown-toggle:focus {
    outline: 0;
}

// The dropdown menu (ul)
.dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: 1000;
    float: left;
    min-width: 220px;
    padding: 5px 0;
    margin: 2px 0 0; // override default ul
    list-style: none;
    font-size: 1.4rem;
    font-weight: normal;
    text-transform: none;
    letter-spacing: 0;
    text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
    background-color: #fff;
    border: darken($lightgrey, 15%) 1px solid;
    border-radius: 2px;
    box-shadow: rgba(0,0,0,0.175) 0 2px 6px;
    background-clip: padding-box;

    // Aligns the dropdown menu to right
    //
    // Deprecated as of 3.1.0 in favor of `.dropdown-menu-[dir]`
    &.pull-right {
        right: 0;
        left: auto;
    }

    // Dividers (basically an hr) within the dropdown
    .divider {
        height: 1px;
        margin: 4px 0;
        overflow: hidden;
        background: darken($lightgrey, 5%);
    }

    // Links within the dropdown menu
    > li > a,
    > li > button {
        display: block;
        width: 100%;
        padding: 3px 20px;
        clear: both;
        font-weight: normal;
        line-height: 1.9em;
        text-align: left;
        color: #333;
        white-space: nowrap; // prevent links from randomly breaking onto new lines
    }

    i {
        font-size: 0.9em;
        margin-right: 0.5rem;
    }
}

// Hover/Focus state
.dropdown-menu > li > a,
.dropdown-menu > li > button {
    &:hover,
    &:focus {
        text-decoration: none;
        color: #fff;
        background: $blue;
    }
}

// Active state
.dropdown-menu > .active > a,
.dropdown-menu > .active > button {
    &,
    &:hover,
    &:focus {
        color: #fff;
        text-decoration: none;
        outline: 0;
        background-color: #428bca;
    }
}

// Disabled state
//
// Gray out text and ensure the hover/focus state remains gray

.dropdown-menu > .disabled > a,
.dropdown-menu > .disabled > button {
    &,
    &:hover,
    &:focus {
        color: #777;
    }
}
// Nuke hover/focus effects
.dropdown-menu > .disabled > a,
.dropdown-menu > .disabled > button {
    &:hover,
    &:focus {
        text-decoration: none;
        background-color: transparent;
        background-image: none; // Remove CSS gradient
        cursor: not-allowed;
    }
}

// Open state for the dropdown
.open {
    // Show the menu
    > .dropdown-menu {
        display: block;
    }

    // Remove the outline when :focus is triggered
    > a {
        outline: 0;
    }
}

// Closed state for the dropdown
.closed {
    > .dropdown-menu {
        display: none;
    }
}

// Menu positioning
//
// Add extra class to `.dropdown-menu` to flip the alignment of the dropdown
// menu with the parent.
.dropdown-menu-right {
    left: auto; // Reset the default from `.dropdown-menu`
    right: 0;
}
// With v3, we enabled auto-flipping if you have a dropdown within a right
// aligned nav component. To enable the undoing of that, we provide an override
// to restore the default dropdown menu alignment.
//
// This is only for left-aligning a dropdown menu within a `.navbar-right` or
// `.pull-right` nav component.
.dropdown-menu-left {
    left: 0;
    right: auto;
}

// Dropdown section headers
.dropdown-header {
    display: block;
    padding: 3px 20px;
    font-size: 1.2rem;
    line-height: 1.428571429;
    color: #777;
    white-space: nowrap; // as with > li > a
}

// Backdrop to catch body clicks on mobile, etc.
.dropdown-backdrop {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    z-index: 990;
}

// Right aligned dropdowns
.pull-right > .dropdown-menu {
    right: 0;
    left: auto;
}

// Allow for dropdowns to go bottom up (aka, dropup-menu)
//
// Just add .dropup after the standard .dropdown class and you're set, bro.
// TODO: abstract this so that the navbar fixed styles are not placed here?

.dropup,
.navbar-fixed-bottom .dropdown {
    // Reverse the caret
    .caret {
        border-top: 0;
        border-bottom: 4px solid;
        content: "";
    }
    // Different positioning for bottom up menu
    .dropdown-menu {
        top: auto;
        bottom: 100%;
        margin-bottom: 1px;
    }
}


// Component alignment
//
// Reiterate per navbar.less and the modified component alignment there.

@media (min-width: 768px) {
    .navbar-right {
        .dropdown-menu {
            right: 0; left: auto;
        }
        // Necessary for overrides of the default right aligned menu.
        // Will remove come v4 in all likelihood.
        .dropdown-menu-left {
            left: 0; right: auto;
        }
    }
}


//
// Dropdown triangles
// --------------------------------------------------

// Placeholders
%dropdown-triangle {
    &:before {
        content: '';
        position: absolute;
        display: block;
    } // :before

    &:after {
        content: '';
        position: absolute;
        z-index: -1;
    } // :after
}

%dropdown-triangle-top {
    &:before {
        @include triangle(($dropdown_triangle * 2), #fff, up);
        top: -$dropdown_triangle;
    }
    &:after {
        @include triangle(($dropdown_triangle * 2) + 2, darken($lightgrey, 15%), up);
        top: -($dropdown_triangle + 1);
    }
}
%dropdown-triangle-bottom {
    &:before {
        @include triangle(($dropdown_triangle * 2), #fff, down);
        bottom: -$dropdown_triangle;
    }
    &:after {
        @include triangle(($dropdown_triangle * 2) + 2, darken($lightgrey, 15%), down);
        bottom: -($dropdown_triangle + 1);
    }
}
%dropdown-triangle-center {
    &:before {
        left: 50%;
        margin-left: (-$dropdown_triangle);
    }
    &:after {
        left: 50%;
        margin-left: -($dropdown_triangle + 1);
    }
}

// TODO: Make the values here use the $dropdown_triangle var
%dropdown-triangle-left {
    &:before {
        left: ($dropdown_triangle + 2);
    }
    &:after {
        left: ($dropdown_triangle + 1);
    }
}
%dropdown-triangle-right {
    &:before {
        left: auto;
        right: ($dropdown_triangle + 2);
    }
    &:after {
        left: auto;
        right: ($dropdown_triangle + 1);
    }
}

// Usable classes
.dropdown-triangle-top {
    @extend %dropdown-triangle;
    @extend %dropdown-triangle-top;
    @extend %dropdown-triangle-center;
}
.dropdown-triangle-top-left {
    @extend %dropdown-triangle;
    @extend %dropdown-triangle-top;
    @extend %dropdown-triangle-left;
}
.dropdown-triangle-top-right {
    @extend %dropdown-triangle;
    @extend %dropdown-triangle-top;
    @extend %dropdown-triangle-right;
}
.dropdown-triangle-bottom {
    @extend %dropdown-triangle;
    @extend %dropdown-triangle-bottom;
    @extend %dropdown-triangle-center;
}
.dropdown-triangle-bottom-left {
    @extend %dropdown-triangle;
    @extend %dropdown-triangle-bottom;
    @extend %dropdown-triangle-left;
}
.dropdown-triangle-bottom-right {
    @extend %dropdown-triangle;
    @extend %dropdown-triangle-bottom;
    @extend %dropdown-triangle-right;
}
